package com.holmes.projecteuler.problem;

/**
 * <h1><a href="https://projecteuler.net/problem=2">Even Fibonacci Numbers</a></h1>
 * <h2>Problem 2</h2>
 *
 * <p>
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * </p>
 *
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * </p>
 *
 * @author Alex
 * @since 07-01-2024
 */
public class Problem2 implements ProjectEulerProblem<Integer, Integer> {

    @Override
    public Integer solve(Integer question) {
        int sumOfEven = 0;

        if (question > 0) {
            for (int i = 0, j = 1; i < question && j < question;) {
                int newTerm = i + j;
                System.out.println(newTerm);

                if (newTerm % 2 == 0) {
                    sumOfEven += newTerm;
                }

                i = j;
                j = newTerm;
            }
        }

        return sumOfEven;
    }
}
